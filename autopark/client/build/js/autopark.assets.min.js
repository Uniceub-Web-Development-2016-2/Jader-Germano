;
(function () {

    window['CONSTANTS'] = {
        APP: 'autopark',
        EMPTY_TEMPLATE: '<ui-view/>'
    };

})();
;
(function () {

    var MODULE_DEPENDENCIES = [
        'angular-growl',
        'ui.router',
        'autopark.painel',
        'autopark.loader',
        'autopark.classificacao'
    ];

    angular.module(CONSTANTS.APP, MODULE_DEPENDENCIES);

})();
;
(function () {

    var TEMPLATE_PATH = 'componentes/classificacao.html';

    var module = angular.module('autopark.classificacao', []);

    module.directive('autoparkClassificacao', function () {

        return {
            scope: {
                valor: '=ngModel',
                max: '=?', // (default = 5)
                onSelect: '&?',
                readonly: '=?'
            },
            restrict: 'E',
            transclude: true,
            templateUrl: TEMPLATE_PATH,
            link: function (scope, element, attrs) {

                if (scope.max == undefined) {
                    scope.max = 5;
                }

                function atualizarEstrelas() {
                    scope.stars = [];
                    for (var i = 0; i < scope.max; i++) {
                        scope.stars.push({
                            filled: i < scope.valor
                        });
                    }
                }

                scope.toggle = function (index) {
                    if (scope.readonly == undefined || scope.readonly === false) {
                        scope.valor = index + 1;
                        scope.onSelect({
                            classificacao: index + 1
                        });
                    }
                };

                scope.$watch('valor', function (oldValue, newValue) {
                    if (newValue) {
                        atualizarEstrelas();
                    }
                });

            }

        };

    });

})();
;
(function () {

    var TEMPLATE_PATH = 'componentes/loader.html';

    var module = angular.module('autopark.loader', []);

    module.service('autopark.loader', function () {

        var _message, _enabled = false;

        return {
            isEnabled: function () {
                return _enabled;
            },
            setMessage: function (value) {
                _message = value;
            },
            getMessage: function () {
                return _message;
            },
            start: function (message) {
                this.setMessage(message);
                _enabled = true;
            },
            stop: function () {
                delete _message;
                _enabled = false;
            }
        };

    });

    module.directive('autoparkLoader', [function () {

        return {
            templateUrl: TEMPLATE_PATH,
            controller: ['$scope', '$sce', 'autopark.loader', function ($scope, $sce, service) {

                $scope.$watch(service.isEnabled, function (newValue) {
                    $scope.enabled = newValue;
                });

                $scope.$watch(service.getMessage, function (newValue) {
                    $scope.message = $sce.trustAsHtml(newValue);
                });

            }]
        };

    }]);

})();
;
(function () {

    var TEMPLATE_PATH = 'componentes/painel.html';

    var module = angular.module('autopark.painel', []);

    module.directive('autoparkPainel', function () {

        var id = 0;

        return {
            scope: {
                titulo: '@'
            },
            restrict: 'E',
            transclude: true,
            templateUrl: TEMPLATE_PATH,
            link: function (scope, element, attrs) {

                scope.id = ++id;

                scope.titulo = attrs['titulo'];
                scope.maximized = false;
                scope.collapsed = attrs['minimizado'] || false;

                scope.maximize = function () {
                    scope.maximized = true;
                    scope.collapsed = false;
                };

                scope.minimize = function () {
                    scope.maximized = false;
                };

                scope.expand = function () {
                    scope.collapsed = false;
                };

                scope.collapse = function () {
                    scope.collapsed = true;
                };

            }

        };

    });

})();
;
(function () {

    var GROWL = ['growlProvider', function (growlProvider) {
        growlProvider.globalTimeToLive({success: 10000, error: -1, info: -1, warning: -1 });
        growlProvider.globalPosition('top-center');
    }];

    angular.module(CONSTANTS.APP).config(GROWL);

})();
;
(function () {

    var ROUTES = ['$urlRouterProvider', '$stateProvider', function ($urlRouterProvider, $stateProvider) {

        $urlRouterProvider.otherwise('/login');

        $stateProvider

            .state('login', {
                url: '/login',
                controller: 'LoginCtrl',
                templateUrl: 'views/login.html'
            })

            .state('protected', {
                abstract: true,
                url: '/protected',
                controller: 'ProtectedCtrl',
                templateUrl: 'views/protected.html'
            })

            .state('protected.alerta', {
                url: '/alerta',
                controller: 'AlertaCtrl',
                templateUrl: 'views/protected/alerta.html'
            })

            .state('protected.arvore', {
                url: '/arvore',
                controller: 'ArvoreCtrl',
                templateUrl: 'views/protected/arvore.html'
            })

            .state('protected.botao', {
                url: '/botao',
                templateUrl: 'views/protected/botao.html'
            })

            .state('protected.classificacao', {
                url: '/classificacao',
                controller: 'ClassificacaoCtrl',
                templateUrl: 'views/protected/classificacao.html'
            })

            .state('protected.painel', {
                url: '/painel',
                templateUrl: 'views/protected/painel.html'
            })

            .state('protected.loader', {
                url: '/loader',
                controller: 'LoaderCtrl',
                templateUrl: 'views/protected/loader.html'
            })

            .state('protected.perfil', {
                url: '/perfil',
                controller: 'PerfilCtrl',
                templateUrl: 'views/protected/perfil.html'
            })

            .state('protected.formulario', {
                url: '/formulario',
                templateUrl: 'views/protected/formulario.html'
            })

            .state('protected.notificacao', {
                url: '/notificacao',
                controller: 'NotificacaoCtrl',
                templateUrl: 'views/protected/notificacao.html'
            })

            .state('protected.tipografia', {
                url: '/tipografia',
                templateUrl: 'views/protected/tipografia.html'
            })

            .state('protected.indicador', {
                url: '/indicador',
                templateUrl: 'views/protected/indicador.html'
            })

            .state('protected.growl', {
                url: '/growl',
                controller: 'GrowlCtrl',
                templateUrl: 'views/protected/growl.html'
            })

            .state('protected.paginacao', {
                url: '/paginacao',
                templateUrl: 'views/protected/paginacao.html'
            })

            .state('protected.interruptor', {
                url: '/interruptor',
                templateUrl: 'views/protected/interruptor.html'
            })

            .state('protected.pesquisa', {
                url: '/pesquisa',
                controller: 'PesquisaCtrl',
                templateUrl: 'views/protected/pesquisa.html'
            })

            .state('error', {
                abstract: true,
                url: '/erro',
                templateUrl: 'views/error/erro.html'
            })

            .state('error.404', {
                url: '/404',
                templateUrl: 'views/error/404.html'
            })

            .state('error.500', {
                url: '/500',
                templateUrl: 'views/error/500.html'
            });

    }];

    angular.module(CONSTANTS.APP).config(ROUTES);

})();
;
(function () {

    var CONTROLLER = ['$scope', function ($scope) {

        $scope.conteudo = 'Atenção! Essa é uma mensagem urgente!';

        $scope.adicionarAlerta = function () {

            var alerta = {conteudo: $scope.conteudo, acessada: false};

            $scope.alertas.push(alerta);

        };

    }];

    angular.module(CONSTANTS.APP).controller('AlertaCtrl', CONTROLLER);

})();
;
(function () {

    var CONTROLLER = ['$scope', function ($scope) {

        var data = [
            {
                text: 'item 1', nodes: [
                {
                    text: 'item 1-1', nodes: [
                    {text: 'item 1-1-1'},
                    {text: 'item 1-1-2'},
                    {text: 'item 1-1-3'}
                ]
                },
                {text: 'item 1-2'},
                {text: 'item 1-3'}
            ]
            },
            {
                text: 'item 2', nodes: [
                {text: 'item 2-1'},
                {text: 'item 2-2'},
                {text: 'item 2-3'}
            ]
            },
            {text: 'item 3'}
        ];

        $('#simples').treeview({data: data});

        $('#checkbox').treeview({data: data, showCheckbox: true});

    }];

    angular.module(CONSTANTS.APP).controller('ArvoreCtrl', CONTROLLER);

})();
;
(function () {

    var CONTROLLER = ['$scope', 'autopark.loader', '$timeout', function ($scope, loader, $timeout) {

        $scope.registro = {
            nota1: 4,
            nota2: 9,
            nota3: 3
        };

    }];

    angular.module(CONSTANTS.APP).controller('ClassificacaoCtrl', CONTROLLER);

})();
;
(function () {

    var CONTROLLER = ['$scope', 'growl', function ($scope, growl) {

        $scope.mensagem = 'mensagem de exemplo';

        $scope.sucesso = function () {
            growl.success($scope.mensagem);
        };

        $scope.erro = function () {
            growl.error($scope.mensagem);
        };

        $scope.info = function () {
            growl.info($scope.mensagem);
        };

    }];

    angular.module(CONSTANTS.APP).controller('GrowlCtrl', CONTROLLER);

})();
;
(function () {

    var CONTROLLER = ['$scope', 'autopark.loader', '$timeout', function ($scope, loader, $timeout) {

        $scope.mensagem = 'mensagem de exemplo';

        $scope.exibir = function () {

            loader.start($scope.mensagem);

            $timeout(function () {
                loader.stop();
            }, 2000);

        };

    }];

    angular.module(CONSTANTS.APP).controller('LoaderCtrl', CONTROLLER);

})();
;
(function () {

    var CONTROLLER = ['$scope', '$state', 'autopark.loader', '$timeout', function ($scope, $state, loader, $timeout) {

        function iniciarTooltip() {
            $('[data-toggle="tooltip"]').tooltip();
        }

        $timeout(iniciarTooltip, 100);

        $scope.entrar = function () {

            loader.start('Autenticando no sistema');

            $timeout(function () {
                $state.go('protected.formulario');
            }, 2000);

        }

    }];

    angular.module(CONSTANTS.APP).controller('LoginCtrl', CONTROLLER);

})();
;
(function () {

    var CONTROLLER = ['$scope', '$state', function ($scope, $state) {

        $scope.items = [
            {
                label: 'componentes', open: false, children: [
                {label: 'alertas', state: 'protected.alerta'},
                {label: 'árvore', state: 'protected.arvore'},
                {label: 'botão', state: 'protected.botao'},
                {label: 'classificação', state: 'protected.classificacao'},
                {label: 'formulários', state: 'protected.formulario'},
                {label: 'growl', state: 'protected.growl'},
                {label: 'indicadores', state: 'protected.indicador'},
                {label: 'interruptor', state: 'protected.interruptor'},
                {label: 'loader', state: 'protected.loader'},
                {label: 'notificações', state: 'protected.notificacao'},
                {label: 'painel', state: 'protected.painel'},
                {label: 'paginação', state: 'protected.paginacao'},
                {label: 'tipografia', state: 'protected.tipografia'}
            ]
            },
            {
                label: 'páginas', children: [
                {label: 'pesquisa', state: 'protected.pesquisa'},
                {label: 'perfil', state: 'protected.perfil'},
                {label: 'erro 404', state: 'error.404'},
                {label: 'erro 500', state: 'error.500'}
            ]
            },
            {
                label: 'exemplo de menu', children: [
                {
                    label: 'item 2-1', children: [
                    {
                        label: 'item 2-1-1', children: [
                        {label: 'item 2-1-1-1'},
                        {label: 'item 2-1-1-2'},
                        {label: 'item 2-1-1-3'},
                        {label: 'item 2-1-1-4'},
                        {label: 'item 2-1-1-5'},
                        {label: 'item 2-1-1-6'},
                        {label: 'item 2-1-1-7'}
                    ]
                    },
                    {label: 'item 2-1-2'},
                    {label: 'item 2-1-3'}
                ]
                },
                {label: 'item 2-2'},
                {label: 'item 2-3'},
                {label: 'item 2-4'},
                {label: 'item 2-5'}
            ]
            }
        ];

        var componentes = $scope.items[0];

        var active = null;

        componentes.children.forEach(function (item) {
            if (item.state == $state.current.name) {
                active = item;
            }
        });

        $scope.active = active;

        $scope.toggle = function (item) {

            if (item.children) {
                item.open = !item.open;
            }

            if (!item.state) {
                return;
            }

            $state.go(item.state);

            $scope.active = item;

            if (window.innerWidth < 768) {
                $scope.options.menuCollapsed = true;
            }

        };

    }];

    angular.module(CONSTANTS.APP).controller('MenuCtrl', CONTROLLER);

})();
;
(function () {

    var CONTROLLER = ['$scope', function ($scope) {

        $scope.conteudo = 'conteúdo de exemplo';

        $scope.removerNotificacoes = function () {
            $scope.notificacoes.splice(0, $scope.notificacoes.length);
        };

        $scope.adicionarNotificacao = function () {

            var notificacao = {conteudo: $scope.conteudo, data: new Date()};

            $scope.notificacoes.push(notificacao);

        };

    }];

    angular.module(CONSTANTS.APP).controller('NotificacaoCtrl', CONTROLLER);

})();
;
(function () {

    var CONTROLLER = ['$scope', function ($scope) {

        $scope.profiles = [
            {label: 'Gerenciamento de conteúdo', active: false},
            {label: 'Gerenciamento de notícias', active: true},
            {label: 'Cadastro de usuários', active: false},
            {label: 'Cadastro de colaboradores', active: false},
            {label: 'Cadastro de fornecedores', active: true},
            {label: 'Avaliação de pesquisa', active: false},
            {label: 'Aprovação de proposta', active: true},
            {label: 'Controle de material', active: false},
            {label: 'Controle de acesso', active: false},
            {label: 'Agendamento de tarefas', active: true}
        ];

        $scope.adicionarAlerta = function () {

            var alerta = {conteudo: $scope.conteudo, acessada: false};

            $scope.alertas.push(alerta);

        };

    }];

    angular.module(CONSTANTS.APP).controller('PerfilCtrl', CONTROLLER);

})();
;
(function () {

    var CONTROLLER = ['$scope', function ($scope) {

        $scope.delete = function () {
            $('#modal').modal('show');
        }

    }];

    angular.module(CONSTANTS.APP).controller('PesquisaCtrl', CONTROLLER);

})();
;
(function () {

    var CONTROLLER = ['$scope', 'autopark.loader', '$state', '$rootScope', '$timeout', function ($scope, loader, $state, $rootScope, $timeout) {

        function iniciarTooltip() {
            $('[data-toggle="tooltip"]').tooltip();
        }

        $rootScope.$on('$stateChangeSuccess', iniciarTooltip);

        $timeout(iniciarTooltip, 100);

        loader.stop();

        $scope.notificacoes = [
            {conteudo: 'essa é a sua primeira notificação', data: new Date()}
        ];

        $scope.alertas = [
            {conteudo: 'Atenção! Essa é uma mensagem urgente!', acessada: false}
        ];

        $scope.acessarAlerta = function (alerta) {
            alerta.acessada = true;
            $state.go('protected.alerta');
        };

        $scope.exibirAlerta = function () {

            var alertas = $scope.alertas;

            for (var i = 0; i < alertas.length; i++) {
                if (!alertas[i].acessada) {
                    return true;
                }
            }

            return false;

        };

        $scope.options = {
            menuCollapsed: (window.innerWidth < 768)
        };

        $scope.toggleMenu = function () {
            $scope.options.menuCollapsed = !$scope.options.menuCollapsed;
        };

    }];

    angular.module(CONSTANTS.APP).controller('ProtectedCtrl', CONTROLLER);

})();
;
(function () {

    if (!String.prototype.format) {
        String.prototype.format = function () {
            var args = arguments;
            return this.replace(/{(\d+)}/g, function (match, number) {
                return typeof args[number] != 'undefined'
                    ? args[number]
                    : match
                    ;
            });
        };
    }

})();